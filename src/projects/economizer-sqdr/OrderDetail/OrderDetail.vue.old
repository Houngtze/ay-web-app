<template>
  <div class="detail">
    <div class="container">
      <div class="info">
        <div class="pic-shower">
          <!-- <img :src="detailData.goodImgUrl" :onerror="defaultImg"> -->
          <img :src="detailData.imgUrl2" :onerror="defaultImg">
        </div>
        <div class="goods-msg">
          <p class="goods-title">{{detailData.activityPrice}}元爱用商城优惠券 共<span class="col">{{detailData.joinCodeList.length}}</span>张
          </p>
          <p class="goods-des"><img class="t-icon" src="../images/icon-up.png">{{detailData.activityTheme}}</p>
          <p class="goods-warm">参与码：{{detailData.joinCodeList.length}}/个</p>
        </div>
        <dl class="goods-li">
          <dt>时间</dt>
          <dd>{{detailData.createTime | timestampToTime}}</dd>
        </dl>
        <dl class="goods-li">
          <dt>参与码</dt>
          <dd>
            <span v-for="(item,index) in detailData.joinCodeList" :key="index">{{item.joinCode}}</span>
          </dd>
        </dl>
      </div>
    </div>
    <div class="footer">
      <p>具体中奖以官方公示为准，敬请期待</p>
    </div>
  </div>
</template>
<script>
  import env from '@/helpers/env';
  import {mapState, mapActions} from "vuex";
  import PageTop from "../components/PageTop";

  export default {
    components: {
      PageTop
    },
    data() {
      return {
        detailData: {
          activityOrderId: '',
          activityPrice: '',
          activityTheme: '',
          activityThemeId: '',
          createTime: '',
          endDate: '',
          goodId: '',
          goodName: '',
          imgUrl: '',
          joinCodeList: [],
          orderStatus: '',
          resultStatus: '',
          totalTime: '',
        },
        Countdown: {
          hh: '01',
          mm: '02',
          ss: '03',
        },
        screenWith: window.screen.width,
        defaultImg: 'this.src="' + require('../images/default.png') + '"'
      };
    },
    filters: {
      timestampToTime(timestamp) {
        let date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
        let Y = date.getFullYear();
        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);
        let D = Number(date.getDate())>=10?date.getDate():`0${date.getDate()}`;
        let h = Number(date.getHours())>=10?date.getHours():`0${date.getHours()}`;
        let m = Number(date.getMinutes())>=10?date.getMinutes():`0${date.getMinutes()}`;
        let s = date.getSeconds();
        return  `${Y}-${M}-${D} ${h}:${m}`;
      }
    },
    computed: {
      ...mapState({
        isSign: state => state.global.userInfo.isSign,
        userId: state => state.global.userInfo.userId,
        ucAccountId: state => state.global.userInfo.ucAccountId,
        idPerson: state => state.global.userInfo.idPerson,
        identity: state => state.global.userInfo.identity,
        mobile: state => state.global.userInfo.mobile,
        name: state => state.global.userInfo.name,
        orderDetail: state => state.orderList.orderDetail,
      }),
    },
    created() {
      this.detailData = this.orderDetail;
    },
    mounted() {
    },
    methods: {
      ...mapActions("global/sign", ["initSignStatus"]),
      handleSwipe(index) {
        this.slideIndex = index + 1
      },
    }
  };
</script>
<style lang="scss" scoped>
  @import "src/style/index.scss";

  .detail {
    display: flex;
    flex-direction: column;
    height: 100%;
    background: #fff;
    .container {
      height: 100%;
      overflow-x: hidden;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
      .info {
        background-color: #fff;
        padding: 0 0.3rem;
        .pic-shower {
          width: 100%;
          height: 5rem;
          text-align: center;
          img {
            max-width: 100%;
            max-height: 5rem;
          }
        }
        .goods-msg {
          margin-bottom: 0.25rem;
          .goods-title {
            color: #363636;
            font-size: 0.3rem;
            line-height: 0.48rem;
            .col {
              color: #FF2929;
            }
          }
          .goods-des {
            font-size: 0.24rem;
            color: #363636;
            .t-icon {
              height: 0.3rem;
              width: auto;
              vertical-align: middle;
              display: inline-block;
              margin-right: 0.1rem;
            }
          }
          .goods-warm {
            color: #a8a8a8;
            font-size: 0.24rem;
          }
        }
        .goods-li {
          border-top: 0.005rem solid #e5e5e5;
          height: 0.9rem;
          line-height: 0.9rem;
          display: flex;
          dt {
            width: 1.1rem;
            color: #a8a8a8;
            flex-shrink: 0;
          }
          span {
            margin-right: 0.1rem;
            display: inline-block;
          }
        }
      }
      .fr {
        float: right;
      }
      .progress {
        padding: .2rem 0.4rem;
        background: #fff;
        .description {
          color: #a8a8a8;
          font-size: 0.24rem;
        }
        .bor {
          width: 100%;
          height: 0.1rem;
          background: #F2F2F2;
          border-radius: 0.1rem;
          overflow: hidden;
          margin: 0.2rem 0;
          .pro {
            height: 100%;
            background: #FF4B2F;
          }
        }
        .biger {
          font-size: 0.3rem;
        }
        .warm {
          color: #333333;
        }
      }
    }
    .footer {
      padding: 0.2rem 0.3rem;
      background: #fff;
      text-align: center;
      font-size: 0.24rem;
      color: #a8a8a8;
    }
  }
</style>
<style lang="scss">
</style>

